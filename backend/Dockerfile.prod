# Build stage
FROM rust:1.75 AS builder

WORKDIR /app

# Set environment variables to handle dependency issues
ENV RUSTFLAGS="-C target-feature=-crt-static"
ENV CARGO_NET_GIT_FETCH_WITH_CLI=true
ENV CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse

# First copy the source code
COPY . .

# Remove the existing Cargo.lock and let Cargo generate a new one
RUN rm -f Cargo.lock && \
    cargo generate-lockfile

# Set SQLx offline mode
ENV SQLX_OFFLINE=true

# Build the application
RUN cargo build --release

# Production stage
FROM debian:bookworm-slim

WORKDIR /app

# Create non-root user
RUN groupadd -r app && useradd -r -g app app

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libssl3 \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy the binary and migrations
COPY --from=builder /app/target/release/backend /app/
COPY --from=builder /app/migrations /app/migrations
COPY --from=builder /app/.env /app/

# Set proper permissions
RUN chown -R app:app /app

# Set the environment
ENV RUST_LOG=info
ENV SQLX_OFFLINE=true

# Switch to non-root user
USER app

# Expose the port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost:3000/api/health || exit 1

# Run the application
CMD ["./backend"]
  